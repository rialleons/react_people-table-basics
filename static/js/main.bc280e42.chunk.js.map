{"version":3,"sources":["App.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isLoadingError","setIsLoadingError","slug","useParams","useEffect","catch","finally","findParent","parentName","find","parent","name","length","map","person","sex","born","died","some","mother","motherName","father","fatherName","HomePage","replace","NotFoundPage","Root","path","element","index","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.bc280e42.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Link as PersonLink, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsLoadingError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const findParent = (parentName: string) => {\n    return people.find(parent => parent.name === parentName)?.slug;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length && !isLoading && !isLoadingError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={classNames({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink\n                        to={`/people/${person.slug}`}\n                        className={classNames({\n                          'has-text-danger': person.sex === 'f',\n                        })}\n                      >\n                        {person.name}\n                      </PersonLink>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n\n                    <td>\n                      {people\n                        .some(mother => mother.name === person.motherName)\n                        && person.motherName ? (\n                          <PersonLink\n                            to={`/people/${findParent(person.motherName)}`}\n                            className=\"has-text-danger\"\n                          >\n                            {person.motherName}\n                          </PersonLink>\n                        ) : (\n                          <p>\n                            {person.motherName || '-'}\n                          </p>\n                        )}\n                    </td>\n\n                    <td>\n                      {people\n                        .some(father => father.name === person.fatherName)\n                        && person.fatherName ? (\n                          <PersonLink\n                            to={`/people/${findParent(person.fatherName)}`}\n                          >\n                            {person.fatherName}\n                          </PersonLink>\n                        ) : (\n                          <p>\n                            {person.fatherName || '-'}\n                          </p>\n                        )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate } from 'react-router-dom';\n\nexport const HomePage = () => (\n  <>\n    <Navigate to=\"/\" replace />\n    <h1 className=\"title\">Home Page</h1>\n  </>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { HashRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"/home\" element={<HomePage />} />\n\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container).render(<Root />);\n"],"sourceRoot":""}